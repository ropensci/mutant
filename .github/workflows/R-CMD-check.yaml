on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'latest'}
        - { os: macOS-latest, r: 'latest'}
        - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-18.04, r: 'latest', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-18.04, r: '4.0', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-18.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
      shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-

        - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

        - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          # XQuartz is needed by vdiffr
          brew cask install xquartz

          # To install vdiffr, these three libraries/tools are needed in addition to XQuartz
          # - freetype (already installed, needed by systemfonts)
          # - cairo (not installed, needed by gdtools)
          # - pkg-config (not installed, needed to set proper build settings)
          brew install pkg-config cairo
  
          # Since sf dependencies are a bit heavy, install them only when they are needed
          SF_NEEDS_UPDATED=$(Rscript -e 'if (!"sf" %in% installed.packages()[,"Package"] || "sf" %in% old.packages()[,"Package"]) cat("yes")')
          if [ "${SF_NEEDS_UPDATED}" == "yes" ]; then
            brew install udunits gdal
          fi

        - name: Install dependencies
        run: |
            remotes::install_deps(dependencies = TRUE)
            remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

        - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
